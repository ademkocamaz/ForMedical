# Generated by Django 4.2.6 on 2023-10-23 17:43

from django.db import migrations, models
import genotip._model.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='KULLANICIADI', max_length=50, unique=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, db_column='SIFRE', max_length=10, null=True, verbose_name='Şifre')),
                ('user', models.CharField(blank=True, db_column='KULLANICI', max_length=5, null=True, verbose_name='Kullanıcı')),
                ('group', models.CharField(blank=True, db_column='GRUP', max_length=30, null=True, verbose_name='Grup')),
                ('is_inactive', models.SmallIntegerField(blank=True, db_column='PASIF', null=True, verbose_name='Pasif ?')),
                ('is_superuser', models.SmallIntegerField(blank=True, db_column='SUPER', null=True, verbose_name='Süper Yetkili ?')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
                'db_table': 'VIEW_GENOTIP_KULLAN',
                'managed': False,
            },
            managers=[
                ('objects', genotip._model.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('oda', models.CharField(db_column='ODA', max_length=15, verbose_name='Oda Bilgisi')),
                ('yatak', models.CharField(db_column='YATAK', max_length=5, verbose_name='Yatak No')),
            ],
            options={
                'verbose_name': 'Yatak',
                'verbose_name_plural': 'Yataklar',
                'db_table': 'VIEW_GENOTIP_YATAKLAR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('dosyano', models.CharField(db_column='DOSYANO', max_length=15, unique=True, verbose_name='Dosya Numarası')),
                ('ad', models.CharField(blank=True, db_column='AD', max_length=20, null=True, verbose_name='Adı')),
                ('soyad', models.CharField(blank=True, db_column='SOYAD', max_length=20, null=True, verbose_name='Soyadı')),
                ('dogumtarih', models.DateTimeField(blank=True, db_column='DOGUMTARIH', null=True, verbose_name='Doğum Tarihi')),
                ('cinsiyet', models.CharField(blank=True, db_column='CINSIYET', max_length=5, null=True, verbose_name='Cinsiyeti')),
                ('vatandaslikno', models.CharField(blank=True, db_column='VATANDASLIKNO', max_length=50, null=True, verbose_name='Vatandaşlık Numarası')),
            ],
            options={
                'verbose_name': 'Hasta Kaydı',
                'verbose_name_plural': 'Hasta Kayıtları',
                'db_table': 'VIEW_GENOTIP_KIMLIK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('dosyano', models.CharField(db_column='DOSYANO', max_length=15, verbose_name='Dosya Numarası')),
                ('gelisno', models.SmallIntegerField(db_column='GELISNO', verbose_name='Geliş No')),
                ('servis', models.CharField(blank=True, db_column='SERVIS', max_length=20, null=True, verbose_name='Servis')),
                ('doktor', models.CharField(blank=True, db_column='DOKTOR', max_length=25, null=True, verbose_name='Doktor')),
                ('oda', models.CharField(blank=True, db_column='ODA', max_length=10, null=True, verbose_name='Oda')),
                ('yatak', models.CharField(blank=True, db_column='YATAK', max_length=5, null=True, verbose_name='Yatak')),
                ('hemsire', models.CharField(blank=True, db_column='HEMSIRE', max_length=25, null=True, verbose_name='Hemşire')),
                ('giristarih', models.DateTimeField(blank=True, db_column='GIRISTARIH', null=True, verbose_name='Giriş Tarihi')),
                ('cikistarih', models.DateTimeField(blank=True, db_column='CIKISTARIH', null=True, verbose_name='Çıkış Tarihi')),
            ],
            options={
                'verbose_name': 'Servis',
                'verbose_name_plural': 'Servisler',
                'db_table': 'VIEW_GENOTIP_SERVIS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceDefinition',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('ad', models.CharField(db_column='AD', max_length=50, verbose_name='Servis Bilgisi')),
                ('aktif', models.BooleanField(db_column='AKTIF', verbose_name='Aktif ?')),
            ],
            options={
                'verbose_name': 'Servis Tanımı',
                'verbose_name_plural': 'Servis Tanımları',
                'db_table': 'VIEW_GENOTIP_SERVISLER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('dosyano', models.CharField(db_column='DOSYANO', max_length=15, unique=True, verbose_name='Dosya Numarası')),
                ('gelisno', models.SmallIntegerField(db_column='GELISNO', verbose_name='Geliş No')),
                ('giristarih', models.DateTimeField(blank=True, db_column='GIRISTARIH', null=True, verbose_name='Giriş Tarihi')),
                ('cikistarih', models.DateTimeField(blank=True, db_column='CIKISTARIH', null=True, verbose_name='Çıkış Tarihi')),
                ('yatgunsay', models.SmallIntegerField(blank=True, db_column='YATGUNSAY', null=True, verbose_name='Yattığı Gün Sayısı')),
                ('tedavi', models.CharField(blank=True, db_column='TEDAVI', max_length=15, null=True, verbose_name='Tedavi')),
                ('kurum', models.CharField(blank=True, db_column='KURUM', max_length=200, null=True, verbose_name='Kurum')),
                ('poliklinik', models.CharField(blank=True, db_column='POLIKLINIK', max_length=20, null=True, verbose_name='Poliklinik')),
                ('doktor', models.CharField(blank=True, db_column='DOKTOR', max_length=50, null=True, verbose_name='Doktor')),
                ('protokolno', models.CharField(blank=True, db_column='PROTOKOLNO', max_length=10, null=True, verbose_name='Protokol')),
                ('icdkodu', models.CharField(blank=True, db_column='ICDKODU', max_length=100, null=True, verbose_name='ICD Kodu')),
                ('icdadi', models.CharField(blank=True, db_column='ICDADI', max_length=200, null=True, verbose_name='ICD Adı')),
            ],
            options={
                'verbose_name': 'Geliş',
                'verbose_name_plural': 'Gelişler',
                'db_table': 'VIEW_GENOTIP_GELISLER',
                'managed': False,
            },
        ),
    ]
