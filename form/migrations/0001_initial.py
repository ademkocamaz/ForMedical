# Generated by Django 4.2.7 on 2023-12-02 20:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('genotip', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewBorn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Düzenleme Tarihi')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('kilogram', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kilo (kg)')),
                ('height', models.CharField(blank=True, max_length=100, null=True, verbose_name='Boy (cm)')),
                ('preliminary_diagnosis', models.TextField(blank=True, null=True, verbose_name='Ön Tanı / Tanı')),
                ('bed', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='genotip.bed', verbose_name='Yatak ve Oda Bilgileri')),
                ('service', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='genotip.service', verbose_name='Servis Bilgileri')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Hemşire Gözlem Formu',
                'verbose_name_plural': 'Hemşire Gözlem Formları',
            },
        ),
        migrations.CreateModel(
            name='ObservationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Düzenleme Tarihi')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='form.observation', verbose_name='Hemşire Gözlem Formu')),
            ],
        ),
        migrations.CreateModel(
            name='Pain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Düzenleme Tarihi')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('numericalPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Ağrı Yok'), (1, '1.'), (2, '2.'), (3, '3.'), (4, '4.'), (5, '5. Orta Şiddetli Ağrı'), (6, '6.'), (7, '7.'), (8, '8.'), (9, '9.'), (10, '10. Şiddetli Ağrı')], default=0, verbose_name='Numerik Ağrı Skalası (0-10)')),
                ('wongBakerFacesPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Ağrı Yok'), (2, '2.'), (4, '4. Orta Şiddetli Ağrı'), (6, '6. Orta Şiddetli Ağrı'), (8, '8.'), (10, '10. Şiddetli Ağrı')], default=0, verbose_name='Yüz Skalası (0-10)')),
                ('behavioralFaceExpressionPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Ağrı İfadesi Yok / Gülümsüyor'), (1, '1. Nadir Yüz Buruşturma, Çatık Kaş İlgisiz'), (2, '2. Sık Sık Çenesini ve Dişlerini Sıkıyor')], default=0, verbose_name='Davranışsal Ağrı Skalası - Yüz İfadesi (0-2)')),
                ('behavioralLegMovementsPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Normal / Rahat Pozisyonda'), (1, '1. Huzursuz'), (2, '2. Tekmeleme / Bacakları Çekme')], default=0, verbose_name='Davranışsal Ağrı Skalası - Bacak Hareketleri (0-2)')),
                ('behavioralActivityPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Sakin Yatış / Rahat Pozisyon'), (1, '1. Gergin / Kıvranıyor'), (2, '2. Hassas / Gergin')], default=0, verbose_name='Davranışsal Ağrı Skalası - Aktivite (0-2)')),
                ('behavioralCryPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Ağlama Yok'), (1, '1. Arasıra İnleme / Ağlama'), (2, '2. Sürekli Ağlama / Bağırma')], default=0, verbose_name='Davranışsal Ağrı Skalası - Ağlama (0-2)')),
                ('behavioralComfortedPainScale', models.PositiveSmallIntegerField(choices=[(0, '0. Memnun / Rahat'), (1, '1. Arasıra Çevreden Rahatsız'), (2, '2. Avutulması Zor')], default=0, verbose_name='Davranışsal Ağrı Skalası - Avutulma (0-2)')),
                ('bed', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='genotip.bed', verbose_name='Yatak ve Oda Bilgileri')),
                ('service', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='genotip.service', verbose_name='Servis Bilgileri')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Ağrı Formu',
                'verbose_name_plural': 'Ağrı Formları',
            },
        ),
        migrations.CreateModel(
            name='PainDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Tarih/Saat')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Düzenleme Tarihi')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('pain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PainScales', to='form.pain', verbose_name='Ağrı Formu')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationInsertionOpening',
            fields=[
                ('observationdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationdetail')),
                ('cvp_catheter', models.DateTimeField(blank=True, null=True, verbose_name='CVP Kateteri - Tarih/Saat')),
                ('peripheral_catheter', models.DateTimeField(blank=True, null=True, verbose_name='Periferik Kateter - Tarih/Saat')),
                ('urinary_catheter', models.DateTimeField(blank=True, null=True, verbose_name='NG Sonda - Tarih/Saat')),
            ],
            options={
                'verbose_name': 'Takılma / Açılma',
                'verbose_name_plural': 'Takılma / Açılma Kayıtları',
            },
            bases=('form.observationdetail',),
        ),
        migrations.CreateModel(
            name='ObservationNote',
            fields=[
                ('observationdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationdetail')),
                ('note', models.TextField(verbose_name='Hemşire İzlem Notu')),
            ],
            options={
                'verbose_name': 'Hemşire İzlem Notu',
                'verbose_name_plural': 'Hemşire İzlem Notu Kayıtları',
            },
            bases=('form.observationdetail',),
        ),
        migrations.CreateModel(
            name='ObservationPageOneDetail',
            fields=[
                ('observationdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationdetail')),
                ('date', models.DateTimeField(verbose_name='Tarih/Saat')),
                ('body_temperature', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vücut Isısı')),
                ('pulse', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nabız')),
                ('blood_pressure', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kan Basıncı')),
                ('number_of_breaths', models.CharField(blank=True, max_length=100, null=True, verbose_name='Solunum Sayısı')),
                ('oxygen_saturation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Oksijen Satürasyonu')),
            ],
            options={
                'verbose_name': 'Hemşire Gözlem Formu Birinci Sayfa',
                'verbose_name_plural': 'Hemşire Gözlem Formu Birinci Sayfa Kayıtları',
            },
            bases=('form.observationdetail',),
        ),
        migrations.CreateModel(
            name='ObservationPageTwoDetail',
            fields=[
                ('observationdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationdetail')),
                ('oral_care', models.DateTimeField(blank=True, null=True, verbose_name='Ağız Bakımı - Uygulama Tarih/Saat')),
                ('hand_facial_care', models.DateTimeField(blank=True, null=True, verbose_name='El/Yüz Bakımı - Uygulama Tarih/Saat')),
                ('body_bath', models.DateTimeField(blank=True, null=True, verbose_name='Vücut Banyosu - Uygulama Tarih/Saat')),
                ('perineal_care', models.DateTimeField(blank=True, null=True, verbose_name='Perine Bakımı - Uygulama Tarih/Saat')),
                ('toenail_care', models.DateTimeField(blank=True, null=True, verbose_name='Ayak/Tırnak Bakımı - Uygulama Tarih/Saat')),
                ('dressing_change', models.DateTimeField(blank=True, null=True, verbose_name='Pansuman Değişimi - Uygulama Tarih/Saat')),
            ],
            options={
                'verbose_name': 'Hijyen Bakımı',
                'verbose_name_plural': 'Hijyen Bakım Kayıtları',
            },
            bases=('form.observationdetail',),
        ),
        migrations.CreateModel(
            name='ObservationTracking',
            fields=[
                ('observationdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationdetail')),
                ('planning', models.DateTimeField(blank=True, null=True, verbose_name='Planlama - Tarih/Saat')),
                ('implementation', models.DateTimeField(verbose_name='Uygulama - Tarih/Saat')),
            ],
            bases=('form.observationdetail',),
        ),
        migrations.CreateModel(
            name='PainFactorAffecting',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Ağrıyı Etkileyen Faktörler (Hastanın Kendi İfadesi / Hemşirenin Gözlemi)')),
            ],
            options={
                'verbose_name': 'Ağrıyı Etkileyen Faktörler (Hastanın Kendi İfadesi / Hemşirenin Gözlemi)',
                'verbose_name_plural': 'Ağrı Faktör Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainFrequency',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Ağrının Sıklığı (Hastanın Kendi İfadesi İle)')),
            ],
            options={
                'verbose_name': 'Ağrının Sıklığı (Hastanın Kendi İfadesi İle)',
                'verbose_name_plural': 'Ağrı Sıklığı Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainIntervention',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('pain_severity', models.TextField(blank=True, null=True, verbose_name='Ağrının Şiddeti')),
                ('medicine_detail', models.TextField(blank=True, null=True, verbose_name='Yapılan Uygulama - İlaç Adı, Dozu ve Uygulama Yolu')),
                ('out_of_medicine', models.TextField(blank=True, null=True, verbose_name='Yapılan Uygulama - İlaç Dışı Uygulama')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Not')),
            ],
            options={
                'verbose_name': 'Yapılan Uygulama',
                'verbose_name_plural': 'Yapılan Uygulama Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainNature',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Ağrının Niteliği (Hastanın Kendi İfadesi İle)')),
            ],
            options={
                'verbose_name': 'Ağrının Niteliği (Hastanın Kendi İfadesi İle)',
                'verbose_name_plural': 'Ağrı Niteliği Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainPlace',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Ağrının Yeri (Hastanın Kendi İfadesi / Hemşirenin Gözlemi)')),
            ],
            options={
                'verbose_name': 'Ağrının Yeri (Hastanın Kendi İfadesi / Hemşirenin Gözlemi)',
                'verbose_name_plural': 'Ağrı Yeri Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainScale',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Ağrı Skalası (Numerik Davransal Yüz)')),
            ],
            options={
                'verbose_name': 'Ağrı Skalası (Numerik Davransal Yüz)',
                'verbose_name_plural': 'Ağrı Skala Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainSeverity',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Ağrının Şiddeti (Skalalardan Uygun Olan Kullanılır)')),
            ],
            options={
                'verbose_name': 'Ağrının Şiddeti (Skalalardan Uygun Olan Kullanılır)',
                'verbose_name_plural': 'Ağrı Şiddeti Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='PainTargetedLevel',
            fields=[
                ('paindetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.paindetail')),
                ('description', models.TextField(verbose_name='Hedeflenen Ağrı Düzeyi (Hasta İle İşbirliği Halinde Hemşire Tarafından)')),
            ],
            options={
                'verbose_name': 'Hedeflenen Ağrı Düzeyi (Hasta İle İşbirliği Halinde Hemşire Tarafından)',
                'verbose_name_plural': 'Hedeflenen Ağrı Düzeyi Kayıtları',
            },
            bases=('form.paindetail',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_Aspiration',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Aspirasyon',
                'verbose_name_plural': 'Aspirasyon Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_BreathingExercise',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Solunum Egzersizi',
                'verbose_name_plural': 'Solunum Egzersizi Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_ColdHotApplication',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Soğuk-Sıcak Uygulama',
                'verbose_name_plural': 'Soğuk-Sıcak Uygulama Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_CVP',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'CVP Takibi',
                'verbose_name_plural': 'CVP Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_EKG',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'EKG Çekimi',
                'verbose_name_plural': 'EKG Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_GodePlus',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Gode+',
                'verbose_name_plural': 'Gode+ Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_GodePlusPlus',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Gode++',
                'verbose_name_plural': 'Gode++ Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_GodePlusPlusPlus',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Gode+++',
                'verbose_name_plural': 'Gode+++ Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_Hemogram',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Hemogram Takibi',
                'verbose_name_plural': 'Hemogram Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_IceBagApplication',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Buz Torbası Uygulaması',
                'verbose_name_plural': 'Buz Torbası Uygulama Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_PTaPTT',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'PT/aPTT Takibi',
                'verbose_name_plural': 'PT/aPTT Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_RadiologicalExamination',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
                ('examination_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tetkik Adı')),
            ],
            options={
                'verbose_name': 'Radyolojik İnceleme',
                'verbose_name_plural': 'Radyolojik İnceleme Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_SandBagApplication',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Kum Torbası Uygulaması',
                'verbose_name_plural': 'Kum Torbası Uygulama Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
        migrations.CreateModel(
            name='ObservationTracking_SteamTreatment',
            fields=[
                ('observationtracking_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='form.observationtracking')),
            ],
            options={
                'verbose_name': 'Buhar Tedavisi',
                'verbose_name_plural': 'Buhar Tedavisi Kayıtları',
            },
            bases=('form.observationtracking',),
        ),
    ]
